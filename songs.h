/*
 *      Copyright 2017 Particle Industries, Inc.
 *
 *      Licensed under the Apache License, Version 2.0 (the "License");
 *      you may not use this file except in compliance with the License.
 *      You may obtain a copy of the License at
 *
 *          http://www.apache.org/licenses/LICENSE-2.0
 *
 *      Unless required by applicable law or agreed to in writing, software
 *      distributed under the License is distributed on an "AS IS" BASIS,
 *      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *      See the License for the specific language governing permissions and
 *      limitations under the License.
 *
 */

#define SONG_COUNT 3

#define SONG_ADDAMSFAMILY 0
#define SONG_GHOSTBUSTERS 1
#define SONG_BEWITCHED    2

#define   Do        523/2
#define  Do_        1046/2
#define   Re        587/2
#define  Re_        1175/2
#define   Mi        659/2
#define  Mi_        1318/2
#define   Fa        698/2
#define  Fa_        1397/2
#define   So        784/2
#define   La        880/2
#define   Si        988/2
#define  _Si        494/2
#define  _La        440/2
#define  _So        392/2
 
#define   bt        323
#define   bt2       bt*2
#define   bt3       bt*3
#define   bt6       bt*6
#define   bt1_2     bt/2
#define   bt3_2     (bt/2)*3
#define   bt1_4     bt/4

/*
 *      Credit:
 *          Midi to Arduino Converter
 *              - Andy Tran (extramaster), 2015
 *          https://www.extramaster.net/tools/midiToArduino/
 *
 *      The songs are gernerated from:
 *          https://www.westnet.com/Halloween/midi/
 *          https://www.extramaster.net/tools/midiToArduino/processFile/?url=https%3A%2F%2Fwww.westnet.com%2FHalloween%2Fmidi%2FAddamsFamily.mid
 *          https://www.extramaster.net/tools/midiToArduino/processFile/?url=https%3A%2F%2Fwww.westnet.com%2FHalloween%2Fmidi%2FGhostBusters.mid
 *          https://www.westnet.com/Halloween/midi/bewitch.mid
 * 
 */

/* Song List */
String songList = "Addams Family, Ghost Busters";

/* An indicator to exit the current song */
bool changeSong = false;

bool delaySong(unsigned duration)
{
    while (duration > 0 && !changeSong) {
        unsigned thisDelay = duration > 100 ? 100 : duration;
        delay(thisDelay);
        duration -= thisDelay;
    }
  
    return changeSong;
}


/*
 *
 *      Addams Family
 *
 */
#define NOTE_COUNT_ADDAMSFAMILY 149

const float notes_AddamsFamily[] = {
    // Note, Duration, Delay
    174, 128.5713,142.857,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    233, 192.85695,214.2855+1071.4275,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    246, 128.5713,142.857,
    261, 192.85695,214.2855+1071.4275,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    246, 128.5713,142.857,
    261, 192.85695,214.2855+214.2855,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    246, 128.5713,142.857,
    261, 192.85695,214.2855+214.2855,
    174, 128.5713,142.857,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    233, 192.85695,214.2855+1071.4275,
    174, 128.5713,142.857,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    233, 192.85695,214.2855+1071.4275,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    246, 128.5713,142.857,
    261, 192.85695,214.2855+1071.4275,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    246, 128.5713,142.857,
    261, 192.85695,214.2855+214.2855,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    246, 128.5713,142.857,
    261, 192.85695,214.2855+214.2855,
    174, 128.5713,142.857,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    233, 192.85695,214.2855+785.7135+142.857,
    349, 4.017853125,4.46428125+138.39271875,
    349, 4.017853125,4.46428125+138.39271875,
    349, 4.017853125,4.46428125+138.39271875,
    349, 4.017853125,4.46428125,
    349, 124.553446875,138.39271875,
    466, 289.285425,321.42825,
    587, 96.428475,107.14275,
    466, 289.285425,321.42825,
    391, 96.428475,107.14275,
    311, 289.285425,321.42825,
    523, 96.428475,107.14275+321.42825,
    415, 96.428475,107.14275,
    440, 289.285425,321.42825,
    523, 96.428475,107.14275,
    440, 289.285425,321.42825,
    349, 96.428475,107.14275,
    293, 289.285425,321.42825,
    466, 96.428475,107.14275+321.42825,
    349, 96.428475,107.14275,
    466, 289.285425,321.42825,
    587, 96.428475,107.14275,
    466, 289.285425,321.42825,
    391, 96.428475,107.14275,
    311, 289.285425,321.42825,
    523, 96.428475,107.14275+321.42825,
    466, 96.428475,107.14275,
    440, 289.285425,321.42825,
    349, 96.428475,107.14275,
    391, 289.285425,321.42825,
    440, 96.428475,107.14275,
    466, 385.7139,428.571+321.42825,
    349, 96.428475,107.14275,
    466, 289.285425,321.42825,
    587, 96.428475,107.14275,
    466, 289.285425,321.42825,
    391, 96.428475,107.14275,
    311, 289.285425,321.42825,
    523, 96.428475,107.14275+321.42825,
    415, 96.428475,107.14275,
    440, 289.285425,321.42825,
    523, 96.428475,107.14275,
    440, 289.285425,321.42825,
    349, 96.428475,107.14275,
    293, 289.285425,321.42825,
    466, 96.428475,107.14275+321.42825,
    349, 96.428475,107.14275,
    466, 289.285425,321.42825,
    587, 96.428475,107.14275,
    466, 289.285425,321.42825,
    391, 96.428475,107.14275,
    311, 289.285425,321.42825,
    523, 96.428475,107.14275+321.42825,
    466, 96.428475,107.14275,
    440, 289.285425,321.42825,
    349, 96.428475,107.14275,
    391, 289.285425,321.42825,
    440, 96.428475,107.14275,
    466, 385.7139,428.571,
    174, 128.5713,142.857,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    233, 192.85695,214.2855+1071.4275,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    246, 128.5713,142.857,
    261, 192.85695,214.2855+1071.4275,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    246, 128.5713,142.857,
    261, 192.85695,214.2855+214.2855,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    246, 128.5713,142.857,
    261, 192.85695,214.2855+214.2855,
    174, 128.5713,142.857,
    195, 128.5713,142.857,
    220, 128.5713,142.857,
    233, 192.85695,214.2855+785.7135+142.857,
    349, 4.017853125,4.46428125+138.39271875,
    349, 4.017853125,4.46428125+138.39271875,
    349, 4.017853125,4.46428125+138.39271875,
    349, 4.017853125,4.46428125,
    349, 124.553446875,138.39271875,
    466, 289.285425,321.42825,
    587, 96.428475,107.14275,
    466, 289.285425,321.42825,
    391, 96.428475,107.14275,
    311, 289.285425,321.42825,
    523, 96.428475,107.14275+321.42825,
    415, 96.428475,107.14275,
    440, 289.285425,321.42825,
    523, 96.428475,107.14275,
    440, 289.285425,321.42825,
    349, 96.428475,107.14275,
    293, 289.285425,321.42825,
    466, 96.428475,107.14275+321.42825,
    349, 96.428475,107.14275,
    466, 289.285425,321.42825,
    587, 96.428475,107.14275,
    466, 289.285425,321.42825,
    391, 96.428475,107.14275,
    311, 289.285425,321.42825,
    523, 96.428475,107.14275+321.42825,
    466, 96.428475,107.14275,
    440, 385.7139,428.571,
    349, 385.7139,428.571,
    391, 385.7139,428.571,
    440, 385.7139,428.571,
    466, 385.7139,428.571,
};

/*
 *
 *      Ghostbusters
 *
 */
#define NOTE_COUNT_GHOSTBUSTERS 367

const float notes_GhostBusters[] = {
    // Note, Duration, Delay
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    659, 93.103425, 103.44825+103.44825, 
    523, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    466, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+620.6895, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    659, 93.103425, 103.44825+103.44825, 
    523, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    466, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    622, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1034.4825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+620.6895, 
    783, 372.4137,  413.793, 
    783, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1034.4825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    622, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1034.4825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+620.6895, 
    783, 372.4137,  413.793, 
    783, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1241.379, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    466, 93.103425, 103.44825, 
    493, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    466, 93.103425, 103.44825, 
    493, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    466, 93.103425, 103.44825, 
    493, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    466, 93.103425, 103.44825, 
    493, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+206.8965, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    659, 93.103425, 103.44825+103.44825, 
    523, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    466, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+620.6895, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    659, 93.103425, 103.44825+103.44825, 
    523, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    466, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    622, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1034.4825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+620.6895, 
    783, 372.4137,  413.793, 
    783, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1034.4825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    622, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1034.4825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+620.6895, 
    783, 372.4137,  413.793, 
    783, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1241.379, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    466, 93.103425, 103.44825, 
    493, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    466, 93.103425, 103.44825, 
    493, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    466, 93.103425, 103.44825, 
    493, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 372.4137,  413.793, 
    523, 93.103425, 103.44825+103.44825, 
    622, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    466, 93.103425, 103.44825, 
    493, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+206.8965, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    659, 93.103425, 103.44825+103.44825, 
    523, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    466, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+620.6895, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    659, 93.103425, 103.44825+103.44825, 
    523, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    466, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+413.793, 
    622, 186.20685, 206.8965+206.8965, 
    622, 186.20685, 206.8965, 
    622, 186.20685, 206.8965+206.8965, 
    523, 186.20685, 206.8965, 
    466, 186.20685, 206.8965+206.8965, 
    622, 186.20685, 206.8965+206.8965, 
    622, 186.20685, 206.8965, 
    622, 186.20685, 206.8965+206.8965, 
    523, 186.20685, 206.8965, 
    466, 186.20685, 206.8965+103.44825, 
    466, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+620.6895, 
    783, 186.20685, 206.8965+206.8965, 
    783, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+2896.551, 
    466, 93.103425, 103.44825, 
    466, 186.20685, 206.8965, 
    466, 186.20685, 206.8965, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+2379.30975, 
    466, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+2379.30975, 
    466, 93.103425, 103.44825, 
    466, 186.20685, 206.8965, 
    466, 186.20685, 206.8965, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+2275.8615, 
    783, 372.4137,  413.793, 
    698, 372.4137,  413.793, 
    622, 372.4137,  413.793, 
    587, 372.4137,  413.793+206.8965, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    659, 93.103425, 103.44825+103.44825, 
    523, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    466, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+620.6895, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    659, 93.103425, 103.44825+103.44825, 
    523, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    466, 186.20685, 206.8965+827.586, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 186.20685, 206.8965, 
    587, 186.20685, 206.8965, 
    523, 186.20685, 206.8965, 
    523, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    622, 186.20685, 206.8965+206.8965, 
    523, 186.20685, 206.8965+103.44825, 
    523, 93.103425, 103.44825, 
    622, 186.20685, 206.8965+517.24125, 
    466, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965, 
    523, 279.31027, 310.34475, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+724.13775, 
    466, 93.103425, 103.44825, 
    523, 93.103425, 103.44825, 
    466, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+620.6895, 
    783, 372.4137,  413.793, 
    783, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1241.379, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+620.6895, 
    783, 372.4137,  413.793, 
    783, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1241.379, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+620.6895, 
    783, 372.4137,  413.793, 
    783, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1241.379, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+620.6895, 
    783, 372.4137,  413.793, 
    783, 186.20685, 206.8965, 
    523, 186.20685, 206.8965+1241.379, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    622, 93.103425, 103.44825, 
    523, 186.20685, 206.8965+620.6895, 
    783, 372.4137,  413.793, 
    783, 186.20685, 206.8965, 
    523, 186.20685, 206.8965,
};

/*
 *
 *      Bewitched
 *
 */
#define NOTE_COUNT_BEWITCHED 68

const float notes_Bewitched[] = {
    // Note, Duration, Delay
    261,  363.21, 403.57 + 67.85,
    293,  128.57, 142.85 + 7.14,
    220,  292.49, 324.99 + 35.71,
    195,  96.42,  107.14 + 807.14,
    261,  398.57, 442.85 + 14.28,
    293,  80.35,  89.28 + 253.57,
    293,  93.21,  103.57 + 239.28,
    293,  122.14, 135.71 + 10.71,
    220,  89.99,  99.99 + 28.57,
    195,  96.42,  107.14 + 921.42,
    293,  385.71, 428.57 + 28.57,
    329,  102.85, 114.28 + 7.14,
    246,  273.21, 303.57 + 7.14,
    220,  106.07, 117.85 + 796.42,
    293,  356.78, 396.42 + 60.71,
    329,  70.71,  78.57 + 264.28,
    329,  86.78,  96.42 + 246.42,
    329,  86.78,  96.42 + 10.71,
    246,  83.57,  92.85 + 42.85,
    220,  102.85, 114.28 + 6860.71,
    329,  263.57, 292.85 + 46.42,
    293,  73.92,  82.14 + 242.85,
    329,  250.71, 278.57 + 53.57,
    293,  73.92,  82.14 + 167.85,
    391,  67.49,  74.99 + 267.85,
    391,  80.35,  89.28 + 242.85,
    349,  106.07, 117.85 + 7.14,
    329,  253.92, 282.14 + 60.71,
    293,  102.85, 114.28 + 417.85,
    233,  80.35,  89.28 + 274.99,
    261,  93.21,  103.57 + 21.42,
    220,  269.99, 299.99 + 39.28,
    233,  189.64, 210.71 + 39.28,
    195,  83.57,  92.85 + 899.99,
    261,  385.71, 428.57 + 60.71,
    293,  128.57, 142.85 + 7.14,
    220,  292.49, 324.99 + 35.71,
    195,  96.42,  107.14 + 807.14,
    261,  398.57, 442.85 + 14.28,
    293,  80.35,  89.28 + 253.57,
    293,  93.21,  103.57 + 239.28,
    293,  122.14, 135.71 + 21.42,
    220,  89.99,  99.99 + 28.57,
    195,  96.42,  107.14 + 921.42,
    293,  385.71, 428.57 + 28.57,
    329,  102.85, 114.28 + 7.14,
    246,  273.21, 303.57 + 7.14,
    220,  106.07, 117.85 + 796.42,
    293,  356.78, 396.42 + 60.71,
    329,  70.71,  78.57 + 264.28,
    329,  86.78,  96.42 + 246.42,
    329,  86.78,  96.42 + 10.71,
    246,  83.57,  92.85 + 42.85,
    220,  102.85, 114.28 + 1371.42 + 685.71,
    174,  25.71,  28.57,
    195,  449.99, 499.99 + 42.85,
    207,  1333.92,1482.14 + 3.57,
    220,  597.85, 664.28 + 21.42,
    195,  427.49, 474.99 + 96.42,
    184,  1054.28,1171.42 + 314.28,
    146,  424.28, 471.42 + 99.99,
    174,  388.92, 432.14 + 24.99,
    233,  102.85, 114.28 + 228.57,
    293,  443.57, 492.85 + 78.57,
    233,  385.71, 428.57 + 28.57,
    293,  93.21,  103.57 + 239.28,
    207,  1002.85,1114.28 + 85.71,
    220,  154.28, 171.42,
};


/*
 *
 *      Halloween Songs
 *
 */
void playAddamsFamily()
{
    int noteCount = NOTE_COUNT_ADDAMSFAMILY;
    
    for (int i = 0; i < noteCount * 3; i += 3) {
        if (changeSong)
            return;
            
        tone(PIN_BUZZER, notes_AddamsFamily[i], notes_AddamsFamily[i+1]);
        delay(notes_AddamsFamily[i+2]);
    }

    //if (!repeatSong)
    //    nextSong();
}

void playGhostBusters()
{
    int noteCount = NOTE_COUNT_GHOSTBUSTERS;
    
    for (int i = 0; i < noteCount * 3; i += 3) {
        if (changeSong)
            return;
            
        tone(PIN_BUZZER, notes_GhostBusters[i], notes_GhostBusters[i+1]);
        delay(notes_GhostBusters[i+2]);
    }

    //if (!repeatSong)
    //    nextSong();
}

void playBewitched()
{
    int noteCount = NOTE_COUNT_BEWITCHED;
    
    for (int i = 0; i < noteCount * 3; i += 3) {
        if (changeSong)
            return;
            
        tone(PIN_BUZZER, notes_Bewitched[i], notes_Bewitched[i+1]);
        delay(notes_Bewitched[i+2]);
    }

    //if (!repeatSong)
    //    nextSong();
}
